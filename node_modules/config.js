var model = require('models');
var mongoose = require('mongoose');
var passport = require('passport');
var LocalStrategy = require('passport-local').Strategy;
var jwt = require('jsonwebtoken');


///connecting to database
mongoose.connect('mongodb://localhost/MolliBaby', 
	function(err,res){if(!err){console.log("Connected to database!");}
	else{throw err;}});




/////passport authentication for local use 
passport.use(new LocalStrategy(
{
  usernameField: 'username'
},
  function(username, password, done) {
    model.user.findOne({ username: username }, function (err, user) {
      if (err) { return done(err); }
      if (!user) { return done(null, false); }
      if (user.password !=password){ return done(null, false, {message: 'Invalid password'}); }
      return done(null, user);
    });
  }
));
passport.serializeUser(function(user, done) {
  done(null, user);
});

passport.deserializeUser(function(user, done) {
  done(null, user);
});


/*
/////////////Token Strategy
var TokenStrategy = require('passport-token').Strategy;

passport.use(new TokenStrategy(
    {
    usernameField: 'username'
  },  
    function (username, token, done) {
        model.user.findOne({username: username}, function (err, user) {
            if (err) {
                return done(err);
            }

            if (!user) {
                return done(null, false);
            }

            if (!user.verifyToken(token)) {
                return done(null, false);
            }

            return done(null, user);
        });
    }
));
*/



///middleware to see if user is authenitcated
exports.isAuthenticated = function(req, res, next){
      if(req.user){
        return next();
      }
      else{
          res.json({error:"User is not authenitcated. Please login."})
      }
}



exports.signUserWithToken = function(req, res, next){
  model.user.findOne({username: req.body.username, password:req.body.password}, function(err, user){
    //////signing the user
      if(!err && user){
          var token = jwt.sign(user, 'ImIInLoveWITHTHEcoc0', {
          expiresIn: '4240d'
        });
      res.json({success:true, message:"You got the token!", token: token, user:user});
      }
      else{
        res.json({success:false, message:"No user with that username and/or password."});
      }


  });
}