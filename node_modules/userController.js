var mongoose = require('mongoose');
var async = require('async');
var models = require('models');
////model variables
var user = models.user;
var montage = models.montage;
var video = models.video; 




///Dashboard page for logged in users.
exports.getDashboard = function(req, res, next) {
	res.send('Dashboard');	
};

//////Page to add a new montage. 
exports.getNewMontage = function(req, res, next) {
	res.render('new_Montage');	
};

/////account settings 
exports.getAccountSettings = function(req, res, next) {
	res.render('account_settings');	
};


exports.postAccountSettings = function(req, res, next) {
	user.find({_id:req.user._id}, function(err, this_user){
		this_user.username = req.body.username;
		this_user.save();
	});	
};

//////creating a new montage and then processing the videos one at time to add
////them to the database as their own documents while making sure they share a 
////relationship with this new montage.
exports.postNewMontage = function(req, res, next) {
	videos = req.body.videos;
	this_montage = new montage;
	console.log(req.files);
	this_video.title = req.body.title;
	
	async.each(req.files, function(file, callback){
		///making a new video mongoose document for each video
		console.log("processing video " + file.filename);
		this_video = new video;
/*		this_user  = req.user._id;
*/		this_video.location = file.filename;
		this_video.belongs_to_montage = this_montage._id;
		////pushing video into Montage document.
		this_montage.videos.push({video:file.filename});
		this_video.save(); 	
		callback();
	}, function(err){
			if(!err){
				this_montage.save();
				res.send("Montage Sucessfully Created!");
			}
			else{
				console.log(err);
			}	
	});
	
};


///fetching all mongodb documents
exports.findAllMontages = function(req, res, next) {
	montage.find({}, function(err, docs){
		res.send(docs);
	});		
};


///getting a specific montage based on ID
exports.getMontage = function(req, res, next) {
	montage.update({_id: req.params.this_montage}, {$inc:{views:1}}, function(err, update_docs){
		montage.find({_id: req.params.this_montage}, function(err, docs){
			res.json({result:docs});
		});	
	});	

	
};


///getting most recent montages
exports.getRecentMontage = function(req, res, next) {
	montage.find({}).sort({created_on:-1}).limit(20).exec(function(err, docs){
		res.send(docs);
	});		
};


///getting most recent montages
exports.getRecentMontagePaginate = function(req, res, next) {
	montage.find({}).sort({created_on:-1}).limit(20).exec(function(err, docs){
		res.send(docs);
	});		
};




///getting most recent montages
exports.getPopularMontagePaginate = function(req, res, next) {
	montage.find({}).sort({created_on:-1}).limit(20).exec(function(err, docs){
		res.send(docs);
	});		
};






